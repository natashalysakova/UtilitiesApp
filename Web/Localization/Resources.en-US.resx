<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="SelectLanguage" xml:space="preserve">
    <value>Language</value>
  </data>
  <data name="AppTitle" xml:space="preserve">
    <value>Utilities App</value>
  </data>
  <data name="UnhandledError" xml:space="preserve">
    <value>An unhandled error has occurred.</value>
  </data>
  <data name="Reload" xml:space="preserve">
    <value>Reload</value>
  </data>
  <data name="Homes" xml:space="preserve">
    <value>Homes</value>
  </data>
  <data name="Tariffs" xml:space="preserve">
    <value>Tariffs</value>
  </data>
  <data name="Services" xml:space="preserve">
    <value>Services</value>
  </data>
  <data name="AdditionalMetersPayments" xml:space="preserve">
    <value>Additional payments by meters</value>
  </data>
  <data name="Settings" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="General" xml:space="preserve">
    <value>General</value>
  </data>
  <data name="Service" xml:space="preserve">
    <value>Service</value>
  </data>
  <data name="Cost" xml:space="preserve">
    <value>Cost</value>
  </data>
  <data name="Difference" xml:space="preserve">
    <value>Amount</value>
  </data>
  <data name="Sum" xml:space="preserve">
    <value>Sum</value>
  </data>
  <data name="ByArea" xml:space="preserve">
    <value>By area</value>
  </data>
  <data name="Area" xml:space="preserve">
    <value>Area</value>
  </data>
  <data name="AdditionalFixedPayments" xml:space="preserve">
    <value>Additional fixed payment</value>
  </data>
  <data name="Price" xml:space="preserve">
    <value>Price</value>
  </data>
  <data name="MetersMeasurements" xml:space="preserve">
    <value>Meters values</value>
  </data>
  <data name="PreviousMeasure" xml:space="preserve">
    <value>Previous</value>
  </data>
  <data name="CurrentMeasure" xml:space="preserve">
    <value>Current</value>
  </data>
  <data name="Month" xml:space="preserve">
    <value>Month</value>
  </data>
  <data name="NotFixedPayments" xml:space="preserve">
    <value>Not fixed utilities</value>
  </data>
  <data name="VolumePayments" xml:space="preserve">
    <value>Payments by consumed volume</value>
  </data>
  <data name="AddHome" xml:space="preserve">
    <value>New home</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="Country" xml:space="preserve">
    <value>Country</value>
  </data>
  <data name="Region" xml:space="preserve">
    <value>Region</value>
  </data>
  <data name="City" xml:space="preserve">
    <value>City</value>
  </data>
  <data name="Street" xml:space="preserve">
    <value>Street</value>
  </data>
  <data name="Home" xml:space="preserve">
    <value>Home</value>
  </data>
  <data name="Apartment" xml:space="preserve">
    <value>Apartment</value>
  </data>
  <data name="IsDefault" xml:space="preserve">
    <value>By default</value>
  </data>
  <data name="ValidationSummary" xml:space="preserve">
    <value>Validation Summary</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="Create" xml:space="preserve">
    <value>Create</value>
  </data>
  <data name="Update" xml:space="preserve">
    <value>Update</value>
  </data>
  <data name="HomeAddedOk" xml:space="preserve">
    <value>Home {0} added</value>
  </data>
  <data name="HomeUpdatedOk" xml:space="preserve">
    <value>Home {0} updated</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="AddTariff" xml:space="preserve">
    <value>New tariff</value>
  </data>
  <data name="SelectService" xml:space="preserve">
    <value>Choose a service</value>
  </data>
  <data name="NoDefaultHome" xml:space="preserve">
    <value>Default home was not found. Create or select it in settings and try again.</value>
  </data>
  <data name="GoToSettings" xml:space="preserve">
    <value>Go to the Settings</value>
  </data>
  <data name="Building" xml:space="preserve">
    <value>House</value>
  </data>
  <data name="StartDate" xml:space="preserve">
    <value>Start date</value>
  </data>
  <data name="EndDate" xml:space="preserve">
    <value>End date</value>
  </data>
  <data name="SelectTariffType" xml:space="preserve">
    <value>Choose type</value>
  </data>
  <data name="TariffType.Meters.Tooltip" xml:space="preserve">
    <value>The amount depends on the meters</value>
  </data>
  <data name="TariffType.Volume.Tooltip" xml:space="preserve">
    <value>The the amount of service consumed, but without entering the meters values.</value>
  </data>
  <data name="TariffType.Volume" xml:space="preserve">
    <value>By volume</value>
  </data>
  <data name="TariffType.Meters" xml:space="preserve">
    <value>Meter</value>
  </data>
  <data name="TariffType.Fixed.Tooltip" xml:space="preserve">
    <value>Fixed amount each month</value>
  </data>
  <data name="TariffType.Fixed" xml:space="preserve">
    <value>Fixed</value>
  </data>
  <data name="TariffType.NotFixedPayment" xml:space="preserve">
    <value>Not fixed</value>
  </data>
  <data name="TariffType.NotFixedPayment.Tooltip" xml:space="preserve">
    <value>An arbitrary amount every month</value>
  </data>
  <data name="TariffType.HouseHoldArea" xml:space="preserve">
    <value>By area</value>
  </data>
  <data name="TariffType.HouseHoldArea.Tooltip" xml:space="preserve">
    <value>The amount depends on the area of ​​the property</value>
  </data>
  <data name="Units" xml:space="preserve">
    <value>Units</value>
  </data>
  <data name="UseLimits" xml:space="preserve">
    <value>Use limits</value>
  </data>
  <data name="UpperLimit" xml:space="preserve">
    <value>Upper limit</value>
  </data>
  <data name="PriceOverLimit" xml:space="preserve">
    <value>Price above limit</value>
  </data>
  <data name="UseAdditionalFeeLabel" xml:space="preserve">
    <value>Additional payment for {0}</value>
  </data>
  <data name="ForUnit" xml:space="preserve">
    <value>unit</value>
  </data>
  <data name="Sqm" xml:space="preserve">
    <value>sq.m.</value>
  </data>
  <data name="AdditionalFeeName" xml:space="preserve">
    <value>Name of additional tariff</value>
  </data>
  <data name="UseFixedPayLabel" xml:space="preserve">
    <value>Additional fixed payment</value>
  </data>
  <data name="FixedPayName" xml:space="preserve">
    <value>Fxed payment name</value>
  </data>
  <data name="TariffAddedOk" xml:space="preserve">
    <value>Tariff {0} is created</value>
  </data>
  <data name="TariffUpdatedOk" xml:space="preserve">
    <value>Tariff {0} has been updated</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="Disable" xml:space="preserve">
    <value>Deactivate</value>
  </data>
  <data name="Enable" xml:space="preserve">
    <value>Activate</value>
  </data>
  <data name="ConfirmTariffDeactivation" xml:space="preserve">
    <value>Do you really want to deactivate this tariff?</value>
  </data>
  <data name="ConfirmTariffDeactivationHelp" xml:space="preserve">
    <value>To confirm the action, enter the end date and confirm the deactivation</value>
  </data>
  <data name="ConfirmTariffDeactivationAddNew" xml:space="preserve">
    <value>Add a new tariff based on deactivated one?</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="DeleteHomeConfirmation" xml:space="preserve">
    <value>Do you really want to delete this home? All related tariffs and bills will be deleted as well. This process cannot be undone.</value>
  </data>
  <data name="HomeDeletedOk" xml:space="preserve">
    <value>Home {0} deleted</value>
  </data>
  <data name="HomeDeletedError" xml:space="preserve">
    <value>Failed to delete home {0}. Error: {1}</value>
  </data>
  <data name="HomeSetAsDefaultConfirmation" xml:space="preserve">
    <value>Are you sure you want to set {0} as your default home?</value>
  </data>
  <data name="HomeSetAsDefault" xml:space="preserve">
    <value>Set as Default</value>
  </data>
  <data name="HomeSetAsDefaultOk" xml:space="preserve">
    <value>Home {0} was set as default</value>
  </data>
  <data name="HomeSetAsDefaultError" xml:space="preserve">
    <value>Failed to set home {0} as default. Error: {1}</value>
  </data>
  <data name="Active" xml:space="preserve">
    <value>Active</value>
  </data>
  <data name="Disabled" xml:space="preserve">
    <value>Inactive</value>
  </data>
  <data name="Type" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="ActiveFrom" xml:space="preserve">
    <value>Active from</value>
  </data>
  <data name="TotalServicesOne" xml:space="preserve">
    <value>Total: {0} Service</value>
  </data>
  <data name="TotalServicesTwoFour" xml:space="preserve">
    <value>Total: {0} Services</value>
  </data>
  <data name="TotalServicesFivePlus" xml:space="preserve">
    <value>Total: {0} Services</value>
  </data>
  <data name="DeleteTariffConfirmation" xml:space="preserve">
    <value>Do you really want to delete this tariff? All related bills will also be deleted. Consider to use tariff deactivation instead. This process cannot be canceled.</value>
  </data>
  <data name="TariffDeletedOk" xml:space="preserve">
    <value>Tariff {0} ({1}) deleted</value>
  </data>
  <data name="TariffDeletedError" xml:space="preserve">
    <value>Failed to delete tariff {0}. Error: {1}</value>
  </data>
  <data name="AddService" xml:space="preserve">
    <value>New service</value>
  </data>
  <data name="UtilitiesDeleteConfirmation" xml:space="preserve">
    <value>Do you really want to delete this service? All tariffs and bills, that use it, will be removed as well. This action cannot be canceled.</value>
  </data>
  <data name="UtilitiesDeleteOk" xml:space="preserve">
    <value>Error when deleting {0}: {1}</value>
  </data>
  <data name="UtilitiesDeleteError" xml:space="preserve">
    <value>Service {0} deleted</value>
  </data>
  <data name="UtilitiesByMonth" xml:space="preserve">
    <value>{0} by months</value>
  </data>
  <data name="MetersByYear" xml:space="preserve">
    <value>Consumption in {0} year</value>
  </data>
  <data name="MetersByAllYears" xml:space="preserve">
    <value>Consumption for all years</value>
  </data>
  <data name="AllYears" xml:space="preserve">
    <value>All years</value>
  </data>
  <data name="ByYear_WithMeasures" xml:space="preserve">
    <value>By consumed volume</value>
  </data>
  <data name="ByYear_ByCost" xml:space="preserve">
    <value>Not fixed payments</value>
  </data>
  <data name="NotFixedByYear" xml:space="preserve">
    <value>Not fixed utilities for {0} year</value>
  </data>
  <data name="NotFixedByAllYears" xml:space="preserve">
    <value>Not fixed utilities for all years</value>
  </data>
  <data name="VolumeByYear" xml:space="preserve">
    <value>Consumption by volume in {0}</value>
  </data>
  <data name="VolumeByAllYears" xml:space="preserve">
    <value>Consumption by volume over all years</value>
  </data>
  <data name="CheckFor" xml:space="preserve">
    <value>Bill for</value>
  </data>
  <data name="PaymentDate" xml:space="preserve">
    <value>Payment date</value>
  </data>
  <data name="ZeroCheck" xml:space="preserve">
    <value>Zero bill</value>
  </data>
  <data name="ZeroCheckDescription" xml:space="preserve">
    <value>It is used to update the meters without calculating the cost.</value>
  </data>
  <data name="NoTariffsForDate" xml:space="preserve">
    <value>There are no tariffs for this household for selected date {0}. To get started, add tariffs to the settings.</value>
  </data>
  <data name="Limits" xml:space="preserve">
    <value>Limits</value>
  </data>
  <data name="AdditionalFee" xml:space="preserve">
    <value>Additional tariff</value>
  </data>
  <data name="TodaysTariffs" xml:space="preserve">
    <value>Tariffs for today</value>
  </data>
  <data name="NoTariffs" xml:space="preserve">
    <value>There are no tariffs in this household. To get started, add tariffs in the settings.</value>
  </data>
  <data name="AddCheck" xml:space="preserve">
    <value>New bill</value>
  </data>
  <data name="Date" xml:space="preserve">
    <value>Date</value>
  </data>
  <data name="PerPage" xml:space="preserve">
    <value>Show:</value>
  </data>
  <data name="Statistics" xml:space="preserve">
    <value>Statistics</value>
  </data>
  <data name="NoHomes" xml:space="preserve">
    <value>No homes found. Please check Settings</value>
  </data>
  <data name="Ok" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="CurrentMeasureFull" xml:space="preserve">
    <value>Current measure</value>
  </data>
  <data name="ConsumedVolume" xml:space="preserve">
    <value>Consumed volume</value>
  </data>
  <data name="Copy" xml:space="preserve">
    <value>Copy</value>
  </data>
  <data name="CopyOk" xml:space="preserve">
    <value>The image is copied in the clipboard</value>
  </data>
  <data name="CopyDownloadOk" xml:space="preserve">
    <value>The image is downloaded</value>
  </data>
  <data name="CheckDeleteConfirmation" xml:space="preserve">
    <value>Do you really want to delete this bill? This process cannot be canceled.</value>
  </data>
  <data name="CheckDeletedOk" xml:space="preserve">
    <value>Bill for {0} from the home {1} was deleted</value>
  </data>
  <data name="CheckDeletedError" xml:space="preserve">
    <value>Error when removing the bill {0} from the home {1}. {2}</value>
  </data>
</root>