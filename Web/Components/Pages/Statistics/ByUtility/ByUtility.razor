@using ApexCharts;
@using Web.Clients
@using System.Globalization;

@if (Checks is null)
{
    return;
}

@if (utilityList is not null)
{
    <MudSelect Variant="Variant.Outlined" T="UtilityGroupViewModel" @bind-Value="@utilitySelected" SelectedValuesChanged="ReloadChart">
        @foreach (var item in utilityList)
        {
            <MudSelectItem Value="@item.Key">@item.Key.Name</MudSelectItem>
        }
    </MudSelect>

    if (utilitySelected is not null)
    {
        @switch (utilityList[utilitySelected])
        {
            case TariffType.Meters:
                <ByUtilityMeters Checks="@Checks" SelectedUtility="@utilitySelected"></ByUtilityMeters>
                break;
            case TariffType.Volume:
                <ByUtilityVolume Checks="@Checks" SelectedUtility="@utilitySelected"></ByUtilityVolume>
                break;
            case TariffType.NotFixedPayment:
                <ByUtilityNotFixed Checks="@Checks" SelectedUtility="@utilitySelected"></ByUtilityNotFixed>
                break;
        }
    }

@*     @foreach (var item in utilityList)
    {
        var url = $"/home/{Checks.First().Home.Id}/stats/{item.Key.Id}";
        <MudLink Href="@url">@item.Key.Name</MudLink>
    } *@
}


@code {
    [Parameter, EditorRequired]
    public IEnumerable<CheckViewDto>? Checks { get; set; }

    private UtilityGroupViewModel? utilitySelected;
    private Dictionary<UtilityGroupViewModel, TariffType> utilityList = new Dictionary<UtilityGroupViewModel, TariffType>();

    private void ReloadChart()
    {
        StateHasChanged();
    }

    protected override void OnInitialized()
    {
    }

    protected override void OnParametersSet()
    {
        if (Checks != null)
        {
            utilityList = Checks
                .SelectMany(x => x.Records)
                .Where(x => x.Tariff.TariffType is TariffType.Meters or TariffType.Volume or TariffType.NotFixedPayment)
                .DistinctBy(x => x.Tariff.UtilityGroupId)
                .ToDictionary(x => new UtilityGroupViewModel() { Id = x.Tariff.UtilityGroupId, Name = x.Tariff.UtilityGroupName }, x => x.Tariff.TariffType);

            if (utilityList.Any())
            {
                utilitySelected = utilityList.First().Key;
            }
        }
    }
}
