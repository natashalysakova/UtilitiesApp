@using ApexCharts;

@inject ILocalizationService Localizer

@if (Checks is null || !Checks.Any())
{
    return;
}

<ApexChart TItem="IGrouping<DateTime, CheckViewDto>" @ref="_chart1" Title="@Localizer["UtilitiesByMonth", SelectedUtility.Name]" Options="@_options">

    @{
        var years = Checks.Select(x => x.Date.Year).Distinct().Order();

        foreach (var year in years)
        {
            var byMonth = Checks
            .Where(x => x.Date.Year == year && x.IsZeroCheck == false)
            .GroupBy(x => x.Date)
            .OrderBy(x => x.Key);

            <ApexPointSeries TItem="IGrouping<DateTime, CheckViewDto>"
                             Items="byMonth"
                             Name="@year.ToString()"
                             SeriesType="SeriesType.Line"
                             XValue="@(e => e.Key.Month)"
                             YAggregate="@(e => e.Sum(e => e.SelectMany(x=>x.Records).Where(x=>x.Tariff.UtilityGroupId == SelectedUtility.Id).Sum(x=>x.Cost)))"
                             OrderByDescending="e=>e.X" />
        }
    }
</ApexChart>

@code {
    [Parameter, EditorRequired]
    public required IEnumerable<CheckViewDto> Checks { get; set; }

    [Parameter, EditorRequired]
    public required UtilityGroupViewModel SelectedUtility { get; set; }

    private ApexChart<IGrouping<DateTime, CheckViewDto>>? _chart1;
    private ApexChartOptions<IGrouping<DateTime, CheckViewDto>> _options = new ApexChartOptions<IGrouping<DateTime, CheckViewDto>>();

    protected override void OnInitialized()
    {
        _options = new ApexChartOptions<IGrouping<DateTime, CheckViewDto>>
            {
                Debug = true,
                Theme = new Theme
                {
                    Mode = Mode.Dark,
                    Palette = PaletteType.Palette1,
                },

                Chart = new Chart
                {
                    Toolbar = new Toolbar
                    {
                        Show = false
                    }
                },
                Xaxis = new XAxis()
                {
                    Type = XAxisType.Category,
                    Categories = Enumerable.Range(1, 12).Select(x => DateTimeFormatInfo.CurrentInfo.GetMonthName(x)),
                },
                Stroke = new Stroke { Curve = Curve.Smooth },
            };
    }

    protected override void OnParametersSet()
    {
        _chart1?.RenderAsync();
    }
}
