@using System.Globalization
@using Web.Clients
@using Web.NavigationServices

@if (filtered is not null && filtered.Any())
{
    <MudText Typo="Typo.h6">Не фіксовані платежі</MudText>
    <MudDataGrid Items="@filtered" Bordered="true" Dense="true" EditMode="DataGridEditMode.Cell" ReadOnly="false"
                  SortMode="SortMode.None" >
        <Columns>
            <PropertyColumn Property="x=>x.Tariff.UtilityGroupName" StickyLeft="true" Title="Послуга" Editable="false" />
            <PropertyColumn Property="x=>x.Cost" Format="C" Title="Сума" Editable="true" CellClass="visible-input" HeaderClass="visible-input">
                <EditTemplate>
                    <MudNumericField @bind-Value="context.Item.Cost"
                                     Culture="@culture" Format="N2"
                                     HideSpinButtons="true"
                                     Adornment="Adornment.End"
                                     AdornmentText="@($"{culture.NumberFormat.CurrencySymbol}/місяць")"
                                     TextChanged="@(()=>{ CommittedItemChanges(context.Item);})"></MudNumericField>
                </EditTemplate>
            </PropertyColumn>
        </Columns>
    </MudDataGrid>
}

@code {
    @inject CheckCalculateService service;
    private CultureInfo culture = CultureInfo.CurrentCulture;

    [Parameter, EditorRequired]
    public required ICollection<RecordEditDto> Model { get; set; }
    private IEnumerable<RecordEditDto>? filtered;

    protected override void OnInitialized()
    {
        DoFiltering();
        service.OnModelUpdated += DoFiltering;
    }

    void DoFiltering()
    {
        filtered = Model.Where(x => x.Tariff.TariffType == TariffType.NotFixedPayment);
        StateHasChanged();
    }

    void CommittedItemChanges(RecordEditDto item)
    {
        service.RequestRefresh();
    }
}
