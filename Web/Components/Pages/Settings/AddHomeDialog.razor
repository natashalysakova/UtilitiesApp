@inject ApiClient ApiClient
@inject ISnackbar Snackbar
@inject ILocalizationService Localizer

@if (Model != null)
{
    <EditForm Model="@Model" OnValidSubmit="CreateUpdateHome">
        <MudDialog>
            <TitleContent>
                @if (IsEditMode)
                {
                    <MudText Typo="Typo.h4">@Model.Name</MudText>
                }
                else
                {
                    <MudText Typo="Typo.h4">@Localizer["AddHome"]</MudText>
                }
            </TitleContent>

            <DialogContent>

                <DataAnnotationsValidator />
                <MudStack>

                    <MudTextField @bind-Value="@Model.Name"
                                  For="@(()=> Model.Name)"
                                  Label="@Localizer["Name"]"></MudTextField>
                    <MudNumericField @bind-Value="@Model.Area"
                                     Culture="@_culture"
                                     Format="N2"
                                     Label="@Localizer["Area"]"
                                     HideSpinButtons="true"
                                     Adornment="Adornment.End"
                                     AdornmentText="@Localizer["Sqm"]"></MudNumericField>
                    <MudTextField @bind-Value="@Model.Country"
                                  For="@(()=> Model.Country)"
                                  Label="@Localizer["Country"]" />
                    <MudTextField @bind-Value="@Model.Region"
                                  For="@(()=> Model.Region)"
                                  Label="@Localizer["Region"]" />
                    <MudTextField @bind-Value="@Model.City"
                                  For="@(()=> Model.City)"
                                  Label="@Localizer["City"]" />
                    <MudTextField @bind-Value="@Model.Street"
                                  For="@(()=> Model.Street)"
                                  Label="@Localizer["Street"]" />
                    <MudTextField @bind-Value="@Model.Building"
                                  For="@(()=> Model.Building)"
                                  Label="@Localizer["Building"]" />
                    <MudTextField @bind-Value="@Model.Apartment"
                                  For="@(()=> Model.Apartment)"
                                  Label="@Localizer["Apartment"]" />
                    <MudCheckBox @bind-Value="@Model.IsDefault"
                                 For="@(()=> Model.IsDefault)"
                                 Label="@Localizer["IsDefault"]" />
                </MudStack>

                @if (_displayAlert)
                {
                    <MudPaper Class="pa-4">
                        <MudText Typo="Typo.subtitle2">@Localizer["Error"]</MudText>
                        <MudText Color="@Color.Error">
                            <ValidationSummary />
                            @if (_validationResult != null)
                            {
                                @foreach (var item in _validationResult.ValidationErrors)
                                {
                                    foreach (var field in item.Value)
                                    {
                                        @field
                                    }
                                }
                            }
                        </MudText>
                    </MudPaper>
                }
            </DialogContent>
            <DialogActions>
                <MudButton OnClick="Cancel">Відміна</MudButton>
                <MudButton Color="Color.Primary" ButtonType="ButtonType.Submit">
                    <span>@Localizer[IsEditMode ? "Update" : "Create"]</span>
                </MudButton>
            </DialogActions>
        </MudDialog>
    </EditForm>
}
else
{
    <MudProgressCircular Style="margin:64px;" Indeterminate="true" />
}

@code {


    [CascadingParameter]
    public required IMudDialogInstance MudDialog { get; set; }

    [Parameter]
    public Guid? HomeId { get; set; }

    private HomeEditDto? Model { get; set; }

    CultureInfo _culture = CultureInfo.CurrentCulture;
    private bool IsEditMode { get; set; }
    bool _displayAlert = false;
    ValidationResult _validationResult = default!;

    protected override async Task OnParametersSetAsync()
    {
        if (HomeId == null)
        {
            Model = new HomeEditDto();
        }
        else
        {
            IsEditMode = true;
            Model = await ApiClient.Home_GetForEditAsync(HomeId.Value);
        }
    }

    private void Submit() => MudDialog.Close(DialogResult.Ok(true));

    private void Cancel() => MudDialog.Cancel();

    private async Task CreateUpdateHome(EditContext context)
    {
        try
        {
            var result = await ApiClient.Home_PutAsync(Model!.Id, Model);
            string message = IsEditMode ?
                "HomeUpdatedOk" :
                "HomeAddOk";

            Snackbar.Add(Localizer[message, result.Name], Severity.Success);
            MudDialog.Close(DialogResult.Ok(result));
        }
        catch (ApiException<ValidationResult> ex)
        {
            _displayAlert = true;
            _validationResult = ex.Result;
        }
        catch
        {
            _displayAlert = true;
        }
    }
}
