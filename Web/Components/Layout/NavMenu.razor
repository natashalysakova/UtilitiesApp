@using Web.NavigationServices

@inject MenuUpdateService NavigationService
@inject ApiClient Client
@inject ILocalizationService Localizer

<MudNavMenu Style="font-size: 1rem;" Color="Color.Primary">

    @if (_navItems != null)
    {
        @foreach (var link in _navItems)
        {
            var url = "/home/" + link.Id;
            string icon;
            if (link.IsDefault)
            {
                icon = "fa-solid fa-house-user";
            }
            else
            {
                icon = "fa-solid fa-house";
            }
            <MudNavLink Href="@url" Icon="@icon" Match="NavLinkMatch.Prefix">@link.Name</MudNavLink>
        }
    }
    <MudNavGroup Title="@Localizer["Settings"]" Expanded="true" Icon="@Icons.Material.Outlined.Settings">
        @*<MudNavLink Href="/settings" Match="NavLinkMatch.All" Icon="@Icons.Material.Outlined.AppSettingsAlt">@Localizer["General"]</MudNavLink>*@
        <MudNavLink Href="/settings/homes" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Outlined.HomeWork">@Localizer["Homes"]</MudNavLink>
        <MudNavLink Href="/settings/tariffs" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Outlined.AttachMoney">@Localizer["Tariffs"]</MudNavLink>
        <MudNavLink Href="/settings/utilities" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Outlined.ElectricMeter">@Localizer["Services"]</MudNavLink>
    </MudNavGroup>
</MudNavMenu>

@code {
    IEnumerable<HomeViewDto>? _navItems;

    protected override async Task OnInitializedAsync()
    {
        if (_navItems == null)
            _navItems = await Client.Home_GetAllAsync();

        NavigationService.LinksChanged += UpdateNavMenu;
    }

    private void UpdateNavMenu(object? sender, EventArgs args)
    {
        this.InvokeAsync(() =>
        {
            _navItems = Client.Home_GetAllAsync().Result;
            StateHasChanged();
        });
    }
}